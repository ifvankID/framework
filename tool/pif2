#!/bin/bash

work_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )"

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

baksmali() {
    local jarfile=$work_dir/tool/baksmali.jar
    if [[ ! -f "$jarfile" ]]; then
        echo -e "${RED}ERROR: baksmali.jar not found!${NC}" >&2 
        return 1
    fi
    java -jar "$jarfile" "$@" > /dev/null 2>&1
}

expressions_fix() {
    local var="$1"
    local escaped_var
    escaped_var=$(printf '%s\n' "$var" | sed 's/[\/&]/\\&/g')
    escaped_var=$(printf '%s\n' "$escaped_var" | sed 's/\[/\\[/g' | sed 's/\]/\\]/g' | sed 's/\./\\./g' | sed 's/;/\\;/g')
    echo "$escaped_var"
}

pif_patches_mode1() {
    local unpack_dir="$1"
    
    certificatechainPatch() { certificatechainPatch="
    .line $1
    invoke-static {}, Lcom/android/internal/util/ifvank/util/OplusPixelPropUtils;->onEngineGetCertificateChain()V
"; }
    instrumentationPatch() { local returnline=$(expr $2 + 1); instrumentationPatch="    invoke-static {$1}, Lcom/android/internal/util/ifvank/util/OplusAttestationHooks;->setProps(Landroid/content/Context;)V
    invoke-static {$1}, Lcom/android/internal/util/ifvank/util/OplusGamesFpsUtils;->setProps(Landroid/content/Context;)V
    invoke-static {$1}, Lcom/android/internal/util/ifvank/util/OplusPixelPropUtils;->setProps(Landroid/content/Context;)V
    .line $returnline
    "; }
    keyboxutilsPatch() { keyboxutilsPatch="    invoke-static {$1}, Lcom/android/internal/util/ifvank/util/framework/KeyboxUtils;->engineGetCertificateChain([Ljava/security/cert/Certificate;)[Ljava/security/cert/Certificate;	
    move-result-object $1
    "; }

    local keystorespiclassfile=$(find "$unpack_dir" -type f -name 'AndroidKeyStoreSpi.smali' | head -n 1)
    local instrumentationsmali=$(find "$unpack_dir" -type f -name "Instrumentation.smali"  | head -n 1)
    local pm_smali=$(find "$unpack_dir" -type f -name 'ApplicationPackageManager.smali' | head -n 1)
    
    if [[ -z "$pm_smali" || -z "$keystorespiclassfile" || -z "$instrumentationsmali" ]]; then 
        echo -e "${RED}    ERROR: PIF patch failed. Required files not found.${NC}" >&2
        return 1
    fi

    local engineGetCertMethod=$(expressions_fix "$(grep 'engineGetCertificateChain(' "$keystorespiclassfile")")
    local newAppMethod1=$(expressions_fix "$(grep 'newApplication(Ljava/lang/ClassLoader;' "$instrumentationsmali")")
    local newAppMethod2=$(expressions_fix "$(grep 'newApplication(Ljava/lang/Class;' "$instrumentationsmali")")
    sed -n "/^${engineGetCertMethod}/,/^\.end method/p" "$keystorespiclassfile" > tmp_keystore
    sed -i "/^${engineGetCertMethod}/,/^\.end method/d" "$keystorespiclassfile"
    sed -n "/^${newAppMethod1}/,/^\.end method/p" "$instrumentationsmali" > inst1
    sed -i "/^${newAppMethod1}/,/^\.end method/d" "$instrumentationsmali"
    sed -n "/^${newAppMethod2}/,/^\.end method/p" "$instrumentationsmali" > inst2
    sed -i "/^${newAppMethod2}/,/^\.end method/d" "$instrumentationsmali"
    local inst1_insert=$(expr $(wc -l < inst1) - 2)
    local instreg=$(grep "Landroid/app/Application;->attach(Landroid/content/Context;)V" inst1 | awk '{print $3}' | sed 's/},//')
    local instline=$(expr $(grep -r ".line" inst1 | tail -n 1 | awk '{print $2}') + 1)
    instrumentationPatch "$instreg" "$instline"
    echo "$instrumentationPatch" | sed -i "${inst1_insert}r /dev/stdin" inst1
    local inst2_insert=$(expr $(wc -l < inst2) - 2)
    instreg=$(grep "Landroid/app/Application;->attach(Landroid/content/Context;)V" inst2 | awk '{print $3}' | sed 's/},//')
    instline=$(expr $(grep -r ".line" inst2 | tail -n 1 | awk '{print $2}') + 1)
    instrumentationPatch "$instreg" "$instline"
    echo "$instrumentationPatch" | sed -i "${inst2_insert}r /dev/stdin" inst2
    local kstoreline=$(expr $(grep -r ".line" tmp_keystore | head -n 1 | awk '{print $2}') - 2)
    certificatechainPatch "$kstoreline"
    echo "$certificatechainPatch" | sed -i '4r /dev/stdin' tmp_keystore
    local lastaput=$(grep "aput-object" tmp_keystore | tail -n 1)
    local leafcert=$(echo "$lastaput" | awk '{print $3}' | awk -F',' '{print $1}')
    local keybox_utils=$(expr $(grep -n "$lastaput" tmp_keystore | awk -F':' '{print $1}') + 1)
    keyboxutilsPatch "$leafcert"
    echo "$keyboxutilsPatch" | sed -i "${keybox_utils}r /dev/stdin" tmp_keystore
    cat inst1 >> "$instrumentationsmali"
    cat inst2 >> "$instrumentationsmali"
    cat tmp_keystore >> "$keystorespiclassfile"
    rm -rf inst1 inst2 tmp_keystore

    package_managerPatch() {
        local FEATURES_FIELDS=".field private static final whitelist featuresAndroid:[Ljava/lang/String;\n.field private static final whitelist featuresNexus:[Ljava/lang/String;\n.field private static final whitelist featuresPixel:[Ljava/lang/String;\n.field private static final whitelist featuresPixelOthers:[Ljava/lang/String;\n.field private static final whitelist featuresTensor:[Ljava/lang/String;"
        sed -i "/# static fields/a ${FEATURES_FIELDS}" "$pm_smali"
        local CODENAME_FIELD=".field private static final whitelist pTensorCodenames:[Ljava/lang/String;"
        sed -i '/\.field private static final greylist-max-o sDefaultFlags:I = 0x400/i\'"$CODENAME_FIELD"'' "$pm_smali"

        read -r -d '' clinit_addition_patch <<'EOF'
    const-string/jumbo v16, "oriole"
    const-string/jumbo v17, "raven"
    const-string/jumbo v3, "komodo"
    const-string v4, "caiman"
    const-string/jumbo v5, "tokay"
    const-string v6, "comet"
    const-string v7, "akita"
    const-string v8, "husky"
    const-string/jumbo v9, "shiba"
    const-string v10, "felix"
    const-string/jumbo v11, "tangorpro"
    const-string/jumbo v12, "lynx"
    const-string v13, "cheetah"
    const-string/jumbo v14, "panther"
    const-string v15, "bluejay"
    filled-new-array/range {v3 .. v17}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->pTensorCodenames:[Ljava/lang/String;
    const-string v13, "com.google.android.feature.GOOGLE_BUILD"
    const-string v14, "com.google.android.feature.GOOGLE_EXPERIENCE"
    const-string v1, "com.google.android.apps.photos.PIXEL_2019_PRELOAD"
    const-string v2, "com.google.android.apps.photos.PIXEL_2019_MIDYEAR_PRELOAD"
    const-string v3, "com.google.android.apps.photos.PIXEL_2018_PRELOAD"
    const-string v4, "com.google.android.apps.photos.PIXEL_2017_PRELOAD"
    const-string v5, "com.google.android.feature.PIXEL_2021_MIDYEAR_EXPERIENCE"
    const-string v6, "com.google.android.feature.PIXEL_2020_EXPERIENCE"
    const-string v7, "com.google.android.feature.PIXEL_2020_MIDYEAR_EXPERIENCE"
    const-string v8, "com.google.android.feature.PIXEL_2019_EXPERIENCE"
    const-string v9, "com.google.android.feature.PIXEL_2019_MIDYEAR_EXPERIENCE"
    const-string v10, "com.google.android.feature.PIXEL_2018_EXPERIENCE"
    const-string v11, "com.google.android.feature.PIXEL_2017_EXPERIENCE"
    const-string v12, "com.google.android.feature.PIXEL_EXPERIENCE"
    filled-new-array/range {v1 .. v14}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->featuresPixel:[Ljava/lang/String;
    const-string v14, "com.google.android.apps.dialer.call_recording_audio"
    const-string v15, "com.google.android.apps.dialer.SUPPORTED"
    const-string v1, "com.google.android.feature.ASI"
    const-string v2, "com.google.android.feature.ANDROID_ONE_EXPERIENCE"
    const-string v3, "com.google.android.feature.GOOGLE_FI_BUNDLED"
    const-string v4, "com.google.android.feature.LILY_EXPERIENCE"
    const-string v5, "com.google.android.feature.TURBO_PRELOAD"
    const-string v6, "com.google.android.feature.WELLBEING"
    const-string v7, "com.google.lens.feature.IMAGE_INTEGRATION"
    const-string v8, "com.google.lens.feature.CAMERA_INTEGRATION"
    const-string v9, "com.google.photos.trust_debug_certs"
    const-string v10, "com.google.android.feature.AER_OPTIMIZED"
    const-string v11, "com.google.android.feature.NEXT_GENERATION_ASSISTANT"
    const-string v12, "android.software.game_service"
    const-string v13, "com.google.android.feature.EXCHANGE_6_2"
    filled-new-array/range {v1 .. v15}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->featuresPixelOthers:[Ljava/lang/String;
    const-string v8, "com.google.android.feature.PIXEL_2022_MIDYEAR_EXPERIENCE"
    const-string v9, "com.google.android.feature.PIXEL_2021_EXPERIENCE"
    const-string v1, "com.google.android.feature.PIXEL_2025_EXPERIENCE"
    const-string v2, "com.google.android.feature.PIXEL_2025_MIDYEAR_EXPERIENCE"
    const-string v3, "com.google.android.feature.PIXEL_2024_EXPERIENCE"
    const-string v4, "com.google.android.feature.PIXEL_2024_MIDYEAR_EXPERIENCE"
    const-string v5, "com.google.android.feature.PIXEL_2023_EXPERIENCE"
    const-string v6, "com.google.android.feature.PIXEL_2023_MIDYEAR_EXPERIENCE"
    const-string v7, "com.google.android.feature.PIXEL_2022_EXPERIENCE"
    filled-new-array/range {v1 .. v9}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->featuresTensor:[Ljava/lang/String;
    const-string v0, "com.google.android.feature.GOOGLE_BUILD"
    const-string v1, "com.google.android.feature.GOOGLE_EXPERIENCE"
    const-string v2, "com.google.android.apps.photos.NEXUS_PRELOAD"
    const-string v3, "com.google.android.apps.photos.nexus_preload"
    const-string v4, "com.google.android.feature.PIXEL_EXPERIENCE"
    filled-new-array {v2, v3, v4, v0, v1}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->featuresNexus:[Ljava/lang/String;
    const-string v0, "android.software.freeform_window_management"
    filled-new-array {v0}, [Ljava/lang/String;
    move-result-object v0
    sput-object v0, Landroid/app/ApplicationPackageManager;->featuresAndroid:[Ljava/lang/String;

EOF
        local clinit_signature_raw=$(grep '\.method static constructor.*<clinit>()V' "$pm_smali" | head -n 1)
        if [[ -n "$clinit_signature_raw" ]]; then
            local clinit_signature_escaped=$(expressions_fix "$clinit_signature_raw")
            sed -n "/^${clinit_signature_escaped}/,/^\.end method/p" "$pm_smali" > clinit_temp.smali
            sed -i "/^${clinit_signature_escaped}/,/^\.end method/d" "$pm_smali"
            
            local injection_line_num=$(grep -n "sStringCache:Landroid/util/ArrayMap;" "clinit_temp.smali" | head -n 1 | cut -d: -f1)
            if [[ -n "$injection_line_num" ]]; then
                echo "$clinit_addition_patch" > patch_data.tmp
                sed -i "${injection_line_num}r patch_data.tmp" "clinit_temp.smali"
                rm patch_data.tmp
            fi
            
            local max_v=$(grep -o 'v[0-9]\+' clinit_temp.smali | sed 's/v//' | sort -rn | head -n 1)
            local new_registers=$(( ${max_v:--1} + 1 ))
            
            sed -i '1,2d' clinit_temp.smali
            local new_clinit_header=".method static constructor whitelist <clinit>()V\n    .registers $new_registers"
            echo -e "$new_clinit_header" > clinit_final.smali
            cat clinit_temp.smali >> clinit_final.smali
            
            cat clinit_final.smali >> "$pm_smali"
            rm clinit_temp.smali clinit_final.smali
        fi

        read -r -d '' has_feature_addition_patch <<'EOF'
    invoke-static {}, Landroid/app/ActivityThread;->currentPackageName()Ljava/lang/String;
    move-result-object v0
    const/4 v1, 0x1
    if-eqz v0, :cond_63
    const-string v2, "com.google.android.googlequicksearchbox"
    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v2
    if-nez v2, :cond_2f
    const-string v2, "com.google.android.apps.pixel.agent"
    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v2
    if-nez v2, :cond_2f
    const-string v2, "com.google.android.apps.pixel.creativeassistant"
    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v2
    if-nez v2, :cond_2f
    const-string v2, "com.google.android.dialer"
    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v2
    if-nez v2, :cond_2f
    const-string v2, "com.google.android.apps.nexuslauncher"
    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v2
    if-eqz v2, :cond_63
    :cond_2f
    sget-object v2, Landroid/app/ApplicationPackageManager;->featuresPixel:[Ljava/lang/String;
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v2
    invoke-interface {v2, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v2
    if-eqz v2, :cond_3c
    return v1
    :cond_3c
    sget-object v2, Landroid/app/ApplicationPackageManager;->featuresPixelOthers:[Ljava/lang/String;
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v2
    invoke-interface {v2, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v2
    if-eqz v2, :cond_49
    return v1
    :cond_49
    sget-object v2, Landroid/app/ApplicationPackageManager;->featuresTensor:[Ljava/lang/String;
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v2
    invoke-interface {v2, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v2
    if-eqz v2, :cond_56
    return v1
    :cond_56
    sget-object v2, Landroid/app/ApplicationPackageManager;->featuresNexus:[Ljava/lang/String;
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v2
    invoke-interface {v2, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v2
    if-eqz v2, :cond_63
    return v1
    :cond_63
    const/4 v2, 0x0
    if-eqz v0, :cond_ab
    const-string v3, "com.google.android.apps.photos"
    invoke-virtual {v0, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_ab
    const-string/jumbo v0, "persist.sys.ifvankprops.photos"
    invoke-static {v0, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z
    move-result v0
    if-eqz v0, :cond_ab
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresPixel:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_84
    return v2
    :cond_84
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresPixelOthers:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_91
    return v1
    :cond_91
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresTensor:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_9e
    return v2
    :cond_9e
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresNexus:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_ab
    return v1
    :cond_ab
    if-eqz p1, :cond_cd
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresTensor:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_cd
    sget-object v0, Landroid/app/ApplicationPackageManager;->pTensorCodenames:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    const-string/jumbo v3, "ro.oplus_ifvank.device"
    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
    move-result-object v3
    invoke-interface {v0, v3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-nez v0, :cond_cd
    return v2
    :cond_cd
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresAndroid:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_da
    return v1
    :cond_da
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresPixel:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_e7
    return v1
    :cond_e7
    sget-object v0, Landroid/app/ApplicationPackageManager;->featuresPixelOthers:[Ljava/lang/String;
    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    move-result-object v0
    invoke-interface {v0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    move-result v0
    if-eqz v0, :cond_f4
    return v1
    :cond_f4
EOF
        local has_feature_signature_raw=$(grep '\.method public whitelist hasSystemFeature(Ljava/lang/String;I)Z' "$pm_smali" | head -n 1)
        if [[ -z "$has_feature_signature_raw" ]]; then
            has_feature_signature_raw=$(grep '\.method public hasSystemFeature(Ljava/lang/String;I)Z' "$pm_smali" | head -n 1)
        fi

        if [[ -n "$has_feature_signature_raw" ]]; then
            local has_feature_signature_escaped=$(expressions_fix "$has_feature_signature_raw")
            sed -n "/^${has_feature_signature_escaped}/,/^\.end method/p" "$pm_smali" > has_feature_temp.smali
            sed -i "/^${has_feature_signature_escaped}/,/^\.end method/d" "$pm_smali"
            
            local target_line_num=$(grep -n "mHasSystemFeatureCache:Landroid/app/PropertyInvalidatedCache;" "has_feature_temp.smali" | head -n 1 | cut -d: -f1)
            if [[ -n "$target_line_num" && "$target_line_num" -gt 1 ]]; then
                local injection_line_num=$((target_line_num - 1))
                echo "$has_feature_addition_patch" > patch_data.tmp
                sed -i "${injection_line_num}r patch_data.tmp" "has_feature_temp.smali"
                rm patch_data.tmp
            fi
            
            local new_registers=7
            
            sed -i '1,2d' has_feature_temp.smali
            local new_hsf_header=".method public whitelist hasSystemFeature(Ljava/lang/String;I)Z\n    .registers $new_registers"
            echo -e "$new_hsf_header" > has_feature_final.smali
            cat has_feature_temp.smali >> has_feature_final.smali

            cat has_feature_final.smali >> "$pm_smali"
            rm has_feature_temp.smali has_feature_final.smali
        fi
    }

    package_managerPatch

    if [[ -f "PIF/classes.dex" ]]; then 
        baksmali d "PIF/classes.dex" -o classes6
        if [ ! -d "classes6" ]; then return 1; fi
        rm -rf "$unpack_dir/smali_classes6"
        mv "classes6" "$unpack_dir/smali/classes6"
    fi

    if [[ $? -eq 0 ]]; then
        return 0
    else
        return 1
    fi
}

if [[ -z "$1" ]]; then
    echo -e "${RED}ERROR: No unpack directory specified.${NC}" >&2
    exit 1
fi

pif_patches_mode1 "$1"
exit $?
